{
	"articles": {
		"1": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2021/04/techblog-02-webcash.png",
			"title": "웹 서비스 캐시 똑똑하게 다루기",
			"summary": "웹 성능을 위해 꼭 필요한 캐시, 제대로 설정하기 쉽지 않습니다. 토스 프론트엔드 챕터에서 올바르게 캐시를 설정하기 위한 노하우를 공유합니다.",
			"created_date": "20240101",
			"id": "1"
		},
		"2": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2021/05/techblog-03-jscodeshift.png",
			"title": "JSCodeShift로 기술 부채 청산하기",
			"summary": "기술 부채는 개발할수록 쌓여만 갑니다. 프론트엔드 챕터가 JSCodeShift를 이용하여 순식간에 100개 서비스의 기술 부채를 해결한 경험을 소개합니다.",
			"created_date": "20231223",
			"id": "2"
		},
		"3": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2021/05/techblog-04-yarn-berry.png",
			"title": "node_modules로부터 우리를 구원해 줄 Yarn Berry",
			"summary": "토스 프론트엔드 레포지토리 대부분에서 사용하고 있는 패키지 매니저 Yarn Berry. 채택하게 된 배경과 사용하면서 좋았던 점을 공유합니다.",
			"created_date": "20231215",
			"id": "3"
		},
		"4": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2021/05/techblog-05-template-literal.png",
			"title": "Template Literal Types로 타입 안전하게 코딩하기",
			"summary": "TypeScript 코드베이스의 타입 안전성을 한 단계 올려줄 수 있는 Template Literal Type의 뜻과 응용에 대해 알아봅니다.",
			"created_date": "20231208",
			"id": "4"
		},
		"5": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2021/10/techblog-06-agility.png",
			"title": "개발자의 애질리티",
			"summary": "이 글은 토스페이먼츠에 입사하신, 혹은 입사를 고려 중인 개발자분들을 위해 작성된 글입니다. 애자일하게 일한다는 것은 어떠한 의미일까요?",
			"created_date": "20231201",
			"id": "5"
		},
		"6": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2022/02/techblog-07-jam-stack.png",
			"title": "조금만 신경써서 초기 렌더링 빠르게 하기 (feat. JAM Stack)",
			"summary": "SPA(Single Page Application) 구조로 웹 프론트엔드 애플리케이션이 개발되면서 초기 렌더링 속도는 프런트엔드 개발자에게 중요한 과제 중 하나가 되었습니다. 사용자 경험에 영향을 줄 수 있는 가장 큰 요소 중 하나가 바로 속도이기 때문입니다.",
			"created_date": "20231125",
			"id": "6"
		},
		"7": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2022/04/techblog-08-rest-docs.png",
			"title": "Kotlin으로 DSL 만들기: 반복적이고 지루한 REST Docs 벗어나기",
			"summary": "토스페이먼츠에서는 API docs를 REST Docs를 사용해서 작성할 수 있도록 권장하고 있습니다. 이 글에서는 DSL을 통해서 반복적인 REST Docs 테스트 코드 작성을 줄일 수 있는 방법을 알아봅니다.",
			"created_date": "20231118",
			"id": "7"
		},
		"8": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2022/05/techblog-09-error-handling.png",
			"title": "에러 핸들링을 다른 클래스에게 위임하기 (Kotlin 100% 활용)",
			"summary": "Kotlin의 Result로 MSA에서 에러가 전파되지 않는 안전한 환경을 만드는 방법을 알아봅니다.",
			"created_date": "20231110",
			"id": "8"
		},
		"9": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2022/06/techblog-10-test-code.png",
			"title": "테스트 의존성 관리로 높은 품질의 테스트 코드 유지하기",
			"summary": "혹시 테스트 코드에서도 의존성을 관리해본 적이 있으실까요? 해당 포스트에서는 Gradle의 java-test-fixtures 플러그인을 사용하여 테스트 의존성 관리를 통해 높은 품질의 테스트 코드를 유지하는 방법을 알아봅니다.",
			"created_date": "20231102",
			"id": "9"
		},
		"10": {
			"thumbnail_image": "https://wp.toss.tech/wp-content/uploads/2022/10/techblog-11-node-js.png",
			"title": "CommonJS와 ESM에 모두 대응하는 라이브러리 개발하기: exports field",
			"summary": "Node.js에는 두 가지 Module System이 존재합니다. 토스 프론트엔드 챕터에서 운영하는 100개가 넘는 라이브러리들은 그것에 어떻게 대응하고 있을까요?",
			"created_date": "20231028",
			"id": "10"
		}
	}
}
